name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write
  packages: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Verify project
        run: mvn -B verify

      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

  dependency-review:
    name: Dependency review (PR only)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dependency review
        uses: actions/dependency-review-action@v4

  codeql:
    name: CodeQL Static Analysis
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["java"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  container-scan:
    name: Container image build & scan
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/bookish-octo-invention
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ${{ env.IMAGE_NAME }}:ci-${{ github.run_number }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.18.2
        with:
          image-ref: ${{ env.IMAGE_NAME }}:ci-${{ github.run_number }}
          format: 'table'
          ignore-unfixed: true

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt

  deploy-preview:
    name: Deploy preview (staging)
    needs: [build-and-test, codeql, container-scan]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to staging via Terraform Cloud
        run: |
          echo "This step triggers Terraform/Terragrunt or Helm deployments."
          echo "Integrate with infrastructure pipeline via reusable workflow."
        env:
          TF_WORKSPACE: staging-bookish-octo
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
